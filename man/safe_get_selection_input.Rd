% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fall_back_wrappers.R
\name{safe_get_selection_input}
\alias{safe_get_selection_input}
\title{Get User Selection Safely with Fallbacks}
\usage{
safe_get_selection_input(
  prompt = "Select an option:",
  choices = c("Yes", "No")
)
}
\arguments{
\item{prompt}{A character string specifying the prompt message to display to the user.}

\item{choices}{A character vector containing the options to present to the user.}
}
\value{
A character string representing the user's selected option, or `NULL` if the user cancels the selection or enters invalid input.
}
\description{
Safely prompts the user to select an option from a list of choices.
}
\details{
This function prompts the user to select an option from a list of choices,
providing a safe and consistent experience across different R environments,
including RStudio and base R. It leverages `rstudioapi` when available for
a more integrated experience, and falls back to base R methods when not.


This function first checks if the `rstudioapi` package is available and if the
RStudio API is active. If so, it attempts to use RStudio's native prompting
capabilities.  For binary (Yes/No) choices, it uses `rstudioapi::showQuestion`.
For multiple choices, it constructs a numbered list and prompts the user to
enter the corresponding number. If `rstudioapi` is not available, it falls back
to the base R `menu()` function.  The function handles cases where the user
cancels the selection or enters invalid input by returning `NULL`.
}
\examples{
\dontrun{
# Example 1: Simple Yes/No selection
answer <- safe_get_selection_input(prompt = "Do you want to proceed?", choices = c("Yes", "No"))
if (!is.null(answer)) {
  print(paste("You selected:", answer))
} else {
  print("Selection cancelled.")
}

# Example 2: Multiple choice selection
fruit <- safe_get_selection_input(prompt = "Choose your favorite fruit:", choices = c("Apple", "Banana", "Orange"))
if (!is.null(fruit)) {
  print(paste("Your favorite fruit is:", fruit))
} else {
  print("Selection cancelled.")
}

# Example 3: Using default values
proceed <- safe_get_selection_input("Proceed?")
if (!is.null(proceed)) {
  print(paste("You selected:", proceed))
} else {
  print("Selection cancelled.")
}
}
}
\author{
Placeholder
}
