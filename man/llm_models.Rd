% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/llm.R
\name{llm_models}
\alias{llm_models}
\title{List Available LLM Models for a Given Service}
\usage{
llm_models(service)
}
\arguments{
\item{service}{A character string specifying the LLM service provider (e.g., "Google Gemini"). Case-insensitive and spaces are allowed.}
}
\value{
A character vector containing the IDs of the available LLM models for the specified service.
}
\description{
Retrieves a list of available LLM model IDs for a given service.
}
\details{
This function retrieves a list of available large language models (LLMs) for a specified service.

This function dynamically calls a service-specific function (e.g., `models_google_gemini`) to fetch the available models.
  The `service` parameter is converted to lowercase, spaces are replaced with underscores, and then prepended with "models_" to form the name of the service-specific function.
  The service-specific function is expected to return a list or data frame containing model information, including an "id" column.
  The function extracts and returns only the model IDs.

  Usage patterns:
  - Ensure that a service-specific function (e.g., `models_google_gemini`) exists and is accessible in the environment.
  - The service-specific function should return a data structure with an "id" column representing the model IDs.
}
\examples{
\dontrun{
# Assuming a function 'models_google_gemini' exists that returns a data frame
# with an 'id' column containing model IDs.
# Example 'models_google_gemini' function (replace with your actual implementation):
models_google_gemini <- function() {
  data.frame(id = c("gemini-1.0-pro", "gemini-1.5-pro"),
             description = c("Gemini 1.0 Pro model", "Gemini 1.5 Pro model"))
}

llm_models("Google Gemini")
llm_models("Huggingface")
# Returns: c("gemini-1.0-pro", "gemini-1.5-pro")

# Example with a different service (assuming 'models_openai' exists):
# llm_models("OpenAI")
}
}
