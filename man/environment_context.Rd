% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/context_prompts.R
\name{environment_context}
\alias{environment_context}
\title{Generate a Context String Representing the Current Environment}
\usage{
environment_context(
  .envir = parent.frame(),
  variable_seperator = "\\n\\n",
  key_val_sep = " => ",
  property_sep = "\\n",
  prefix =
    "\\n## For Context, below are variables and properties,in the environment: \\n",
  suffix = "\\n## End partial list of context variables from the envitonment.",
  max_context_length = 10000L
)
}
\arguments{
\item{.envir}{The environment to inspect. Defaults to the parent frame
(the environment from which the function is called).}

\item{variable_seperator}{Character string used to separate information
about different variables. Defaults to `\\n\\n`.}

\item{key_val_sep}{Character string used to separate keys and values in
the property descriptions. Defaults to ` => `.}

\item{property_sep}{Character string used to separate properties of a
single variable. Defaults to `\\n`.}

\item{prefix}{Character string to prepend to the context string. Defaults
to a descriptive header.}

\item{suffix}{Character string to append to the context string. Defaults
to a descriptive footer.}

\item{max_context_length}{Maximum length of the generated context string.
Longer strings are truncated. Defaults to 10000.}
}
\value{
A character string containing a description of the variables
  and their properties in the specified environment.
}
\description{
Generates a string summarizing variables in an environment.
}
\details{
This function creates a string that describes variables and their
properties within a specified environment. It's useful for providing
context in debugging or automated documentation.

The function lists variables in the given environment (`.envir`),
  retrieving properties like class, length, dimensions (if applicable),
  and names (if applicable). For functions, it also includes the function
  header. The generated string includes a prefix and suffix for context.
  The final string is truncated to `max_context_length`.
}
\examples{
\dontrun{
# Generate context for the global environment
context_string <- environment_context(.envir = .GlobalEnv)
cat(context_string)

# Generate context for a custom environment
my_env <- new.env()
my_env$x <- 1:10
my_env$y <- "hello"
context_string <- environment_context(.envir = my_env)
cat(context_string)
}
}
