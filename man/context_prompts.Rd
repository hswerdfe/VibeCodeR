% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_roxygen_comment.R
\name{context_prompts}
\alias{context_prompts}
\title{Generate Contextual Prompts for Code Generation}
\usage{
context_prompts(
  context,
  path = here::here(),
  config_path = file.path(path, ".VibeCodeR")
)
}
\arguments{
\item{context}{A list containing context information, typically obtained from
`rstudioapi::getSourceEditorContext()`.  It must contain at least a
`contents` element (a character vector representing the lines of the current document).}

\item{path}{The base path for the `.VibeCodeR` directory. Defaults to the
project root directory using `here::here()`.}

\item{config_path}{The full path to the `.VibeCodeR` directory. Defaults to
`here::here()/.VibeCodeR`.}
}
\value{
A character string containing the constructed context prompt, or an
  empty string if no context is included.
}
\description{
Constructs a context prompt by reading configuration files
  and including relevant information based on the included context types.
}
\details{
Generates context prompts based on specified configuration files, including
information about the currently selected file, libraries in memory, and
libraries referenced in other parts of the code.

This function reads configuration files located in the `.VibeCodeR`
  directory to determine which context elements to include in the prompt.
  It checks for files named `.include_context_*.config`, where `*` can be
  `currently_selected_file`, `libraries_in_memmory`, or
  `libraries_refrenced_in_other_parts_of_code`. The contents of these files
  (TRUE or FALSE) determine whether the corresponding context is included.
  If no context is included, a warning is issued, and an empty string is
  returned. The function retrieves information about the current file,
  loaded libraries, and referenced libraries (using `libraries_in_memmory()`
  and `libraries_extract_files()`).  The context prompt is then constructed by
  concatenating relevant information with section splitters.
}
\examples{
\dontrun{
# Assuming you have a .VibeCodeR directory with context configuration files
context <- rstudioapi::getSourceEditorContext()
prompt <- context_prompts(context)
cat(prompt)
}
}
