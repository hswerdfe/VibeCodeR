% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fall_back_wrappers.R
\name{text_input}
\alias{text_input}
\title{Get Text Input from User}
\usage{
text_input(prompt = "Enter input:", title = "Input")
}
\arguments{
\item{prompt}{character. The message displayed to the user as a prompt. Defaults to "Enter input:".}

\item{title}{character. The title of the input dialog (only applicable when using `rstudioapi`). Defaults to "Input".}
}
\value{
character. The text entered by the user.
}
\description{
Obtains text input from the user.
}
\details{
Prompts the user for text input, using RStudio's prompt if available, otherwise falling back to base R's `readline`.

This function attempts to use the `rstudioapi` package to display a modal prompt for user input if running within RStudio. If `rstudioapi` is not available or not running within RStudio, it falls back to using the base R `readline` function. This ensures cross-platform compatibility and a consistent user experience.  The function prioritizes using `rstudioapi` because it provides a more user-friendly modal dialog for input, preventing the console from being cluttered with input prompts.  When using `readline`, a space is appended to the prompt for better readability.
}
\examples{
\dontrun{
# Example 1: Using the default prompt and title
user_input <- text_input()
print(paste("You entered:", user_input))

# Example 2: Specifying a custom prompt
name <- text_input(prompt = "Please enter your name:")
print(paste("Hello,", name, "!"))

# Example 3: Specifying a custom prompt and title (RStudio only)
answer <- text_input(prompt = "What is the capital of France?", title = "Geography Quiz")
print(paste("Your answer:", answer))
}
}
